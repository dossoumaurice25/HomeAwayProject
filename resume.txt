namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Foundation\Auth\AuthenticatesUsers;
use Illuminate\Http\Request;

class LoginController extends Controller
{
    use AuthenticatesUsers;

    protected function credentials(Request $request)
    {
        return array_merge($request->only($this->username(), 'password'), ['is_active' => 1]);
    }

    protected function sendFailedLoginResponse(Request $request)
    {
        $user = \App\Models\User::where($this->username(), $request->{$this->username()})->first();

        if ($user && !\Hash::check($request->password, $user->password)) {
            return redirect()->back()
                ->withInput($request->only($this->username(), 'remember'))
                ->withErrors([
                    $this->username() => trans('auth.failed'),
                ]);
        }

        if ($user && !$user->is_active) {
            return redirect()->back()
                ->withInput($request->only($this->username(), 'remember'))
                ->withErrors([
                    $this->username() => 'Votre compte a été désactivé par l\'administrateur.',
                ]);
        }

        return redirect()->back()
            ->withInput($request->only($this->username(), 'remember'))
            ->withErrors([
                $this->username() => trans('auth.failed'),
            ]);
    }
}


 // 'telephone' =>$request->telephone,
            // 'adresse' => $request->adresse,
            // 'ville' => $request->ville,
            // 'code_postal' => $request->code_postal,
            // 'pays' => $request->pays,
            // 'date' => $request->date,
            // 'image' => $profilPath,


             // if ($request->hasFile('image')) {
        //     // Stockez l'image et récupérez le chemin
        //     $profilPath = $request->file('image')->store('profilUser', 'public');
        // } else {
        //     // Gérer le cas où l'image n'est pas présente
        //     return redirect()->back()->with('error', 'Image is required and was not provided.');


  // 'adresse.required' => 'L\'adresse est requise',
        // 'adresse.min' => 'minimum 2 caractères',
        // 'adresse.max' => 'maximum 20 caractères',
        // 'ville.required' => 'La ville est requise',
        // 'ville.min' => 'minimum 3 caractères',
        // 'pays.min' => 'minimum 3 caractères',
        // 'pays.required' => 'Le pays est requis',
        // 'ville.max' => 'maximum 20 caractères',
        // 'telephone.required' => 'Le numero de telephone est requise',
        // 'telephone.min' => 'minimum 3 caractères',
        // 'code_postal.required' => 'Le code_postal est requis',
        // 'code_postal.min' => 'minimum 3 caractères',
        // 'image.required' => 'L\'image est requise',
        // 'date.required' => 'La date  requise',
        // 'code_postal.integer' => 'Le code_postal doit être uniquement des chiffres',


        


















